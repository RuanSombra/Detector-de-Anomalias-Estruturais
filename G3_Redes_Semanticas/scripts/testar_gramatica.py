import os
from lark import Lark, exceptions

# Pega o diret√≥rio do script atual
script_dir = os.path.dirname(os.path.abspath(__file__))
caminho_gramatica = os.path.join(script_dir, 'gramatica.lark')

print("--- INICIANDO TESTE DE GRAM√ÅTICA ---")

# 1. Tenta carregar o arquivo da gram√°tica
try:
    with open(caminho_gramatica, 'r', encoding='utf-8') as f:
        gramatica_txt = f.read()
    print(f"‚úÖ Arquivo '{caminho_gramatica}' lido com sucesso.")
except Exception as e:
    print(f"‚ùå ERRO CR√çTICO: N√£o foi poss√≠vel ler o arquivo da gram√°tica: {e}")
    exit()

# 2. Tenta inicializar o parser do Lark com a gram√°tica
try:
    parser = Lark(gramatica_txt)
    print("‚úÖ Parser do Lark inicializado com a gram√°tica sem erros de sintaxe.")
except Exception as e:
    print(f"‚ùå ERRO CR√çTICO: A gram√°tica no arquivo .lark cont√©m um erro de sintaxe: {e}")
    exit()

# 3. Tenta fazer o parse de uma regra de exemplo
regra_exemplo = "VERIFICAR PAREDE CONTIDO_EM ANDAR"
print(f"\nüß™ Tentando fazer o parse da regra de exemplo: '{regra_exemplo}'")
try:
    arvore = parser.parse(regra_exemplo)
    print("‚úÖ Parse da regra de exemplo realizado com sucesso!")
    print("\nüå≥ Esta √© a √°rvore de parse gerada:")
    print(arvore.pretty())
except exceptions.UnexpectedToken as e:
    print(f"‚ùå ERRO DE PARSE: A regra de exemplo n√£o corresponde √† gram√°tica.")
    print(f"   - Token inesperado: {e.token}")
    print(f"   - Esperava um destes: {list(e.expected)}")
except Exception as e:
    print(f"‚ùå ERRO DE PARSE: Ocorreu um erro inesperado: {e}")

print("\n--- TESTE DE GRAM√ÅTICA CONCLU√çDO ---")